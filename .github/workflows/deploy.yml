name: CI/CD with Terraform
on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    outputs:
      SERVER_PUBLIC_IP: ${{ steps.set-ip.outputs.instance_public_ip }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_STATE_BUCKET_NAME: ${{ secrets.AWS_TF_STATE_BUCKET_NAME }}
        run: |
          terraform init \
            -backend-config="bucket=${TF_STATE_BUCKET_NAME}" \
            -backend-config="region=${AWS_REGION}"
        working-directory: ./terraform

      - name: Terraform Plan
        id: plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          PRIVATE_SSH_KEY: ${{ secrets.AWS_SSH_KEY_PRIVATE }}
          PUBLIC_SSH_KEY: ${{ secrets.AWS_SSH_KEY_PUBLIC }}
        run: |
          terraform plan \
            -var="region=${AWS_REGION}" \
            -var="public_key=${PUBLIC_SSH_KEY}" \
            -var="private_key=${PRIVATE_SSH_KEY}" \
            -var="key_name=deployer-key" \
            -out=PLAN
        working-directory: ./terraform

      - name: Terraform Apply
        id: apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply PLAN
        working-directory: ./terraform

      - name: Set Output
        id: set-ip
        run: |
          echo "instance_public_ip=$(terraform output instance_public_ip)" >> $GITHUB_ENV
        working-directory: ./terraform
